@model IEnumerable<ATTSystems.SFA.Model.ViewModel.PasswordSettingViewModel>
@{
    ViewData["Title"] = "ListPasswordSetting";
    Layout = null;
}



<style>
     
</style>
<div class="row">
    <div class="col-lg-6">
        <h4 class="pl15 pt10 pr15" style="padding-left: 10px; padding-top: 10px;">Password Setting</h4>
    </div>
    <div class="col-lg-6">

    </div>
</div>

<div class="body">
    <table class="table table-responsive-md table-bordered table-striped table-hover js-basic-example dataTable customTbl">
        <thead style="color:#E9510E; background-color:#E9510E">
            <tr>
                <th>
                    Max.PasswordLife
                </th>
                <th>
                    Max.PasswordFailedCount
                </th>
                <th>
                    Min.PasswordLength
                </th>
                <th>
                    Min.LowerCase
                </th>
                <th>
                    Min.UpperCase
                </th>
                <th>
                    Min.Numeric
                </th>
                <th>
                    Min.SpecialCharacter
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="row@(item.Id)">
                    <td id="col_MaxPwdLife">
                        @Html.DisplayFor(modelItem => item.MaxPwdLife)
                    </td>
                    <td id="col_MaxPwdFailedCount">
                        <span title="@Html.DisplayFor(modelItem => item.MaxPwdFailedCount)">@Html.DisplayFor(modelItem => item.MaxPwdFailedCount)</span>
                    </td>
                    <td id="col_MinPwdLength">
                        <span title="@Html.DisplayFor(modelItem => item.MinPwdLength)">@Html.DisplayFor(modelItem => item.MinPwdLength)</span>
                    </td>
                    <td id="col_MinLowerCase">
                        <span title="@Html.DisplayFor(modelItem => item.MinLowerCase)">@Html.DisplayFor(modelItem => item.MinLowerCase)</span>
                    </td>
                    <td id="col_MinUpperCase">
                        <span title="@Html.DisplayFor(modelItem => item.MinUpperCase)">@Html.DisplayFor(modelItem => item.MinUpperCase)</span>
                    </td>
                    <td id="col_MinNumeric">
                        <span title="@Html.DisplayFor(modelItem => item.MinNumeric)">@Html.DisplayFor(modelItem => item.MinNumeric)</span>
                    </td>
                    <td id="col_MinSpecialCharacter">
                        <span title="@Html.DisplayFor(modelItem => item.MinSpecialCharacter)">@Html.DisplayFor(modelItem => item.MinSpecialCharacter)</span>
                    </td>
                    <td align="center">
                        <a href="#" data-id="@item.Id" class="lnkEdit" title="Edit" data-para="@item.Id"><i class="material-icons">mode_edit</i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="modalDiv">
</div>

@*<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>*@

<script type="text/javascript">

$(function () {
   
        $('.customTbl').on('click', '.lnkEdit', function () {
            $('.lnkEdit').addClass('tmpEdit');
            $('.tmpEdit').removeClass('lnkEdit');
            setTimeout(function () {
                $('.tmpEdit').addClass('lnkEdit');
                $('.lnkEdit').removeClass('tmpEdit');
            }, 3000);
            var _msgId = $(this).attr('data-para');
            if (_msgId != "") {
             
                var relativeURI = "@Url.Action("EditPasswordSettingModal", "Setting", new { id = "_para1" })".replace("_para1", _msgId);
                RenderPartialView(relativeURI, "#Editsettpwsd");
            }
        });
    });

    function RenderPartialView(relativeURI, modalType) {
        $.ajax({
            url: relativeURI,
            type: "Get",
            cache: false,
            success: function (data) {
               
                $("#modalDiv").html("");
                $("#modalDiv").html(data);
                $(modalType).modal('show');
            },
            error: function (data) {
                alert("==1== " + data.statusText)
                swal("Warning", data.statusText, "error");
            }
        });
    }

    var prevErr = [];
    function SuccessCreate(e) {
        var msg = e.Message;
        var isDelete = false;
        var isUpdate = false;
        if (e.Code == 200) {
            if (e.ModalType == "Add") {
                $('#addUserModal').modal('hide');
            }
            else if (e.ModalType == "Delete") {
                isDelete = true;
            }
            else {
                $('#editPasswordSettingModal').modal('hide');
            }
            showDialog(msg, e.ModalType + "", "success", "Setting", "ListPasswordSetting", 0, isUpdate, isDelete);
        }
        else {
            if (e.Code == 201 && e.ModalType != "Delete") {
                if (prevErr.length > 0) {
                    for (i = 0; i < prevErr.length; i++) {
                        $(prevErr[0]).html("");
                    }
                }
                prevErr = [];
                var errTok = e.Message.split("|");
                for (i = 0; i < errTok.length; i++) {
                    var tok = errTok[i].split(":");

                    prevErr.push('#' + tok[0])
                    $('#' + tok[0]).html(tok[1]);
                }
            }
            showDialog(msg, e.ModalType + "", "error", "Setting", "ListPasswordSetting", 0, false, false);
        }
    }

    function FailCreate(e) {
        showDialog(e.statusText, "", "error", "", "", 0, false, false);
    }

</script>


